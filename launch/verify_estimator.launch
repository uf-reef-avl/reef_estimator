<launch>

    <arg name="run_estimator" default="true"/>
    <arg name="use_rgbd" default="true"/>
    <arg name="run_uncc" default="false"/>
    <arg name="use_xtion" default="true"/>

    <arg name="vehicle" default="dodo"/>

    <node if="$(arg run_estimator)" name="reef_estimator" pkg="reef_estimator" type="reef_estimator" output="screen">
        <rosparam file="$(find reef_estimator)/params/xy_est_params.yaml" />
        <rosparam file="$(find reef_estimator)/params/z_est_params.yaml" />
        <rosparam file="$(find reef_estimator)/params/basic_params.yaml" />
        <remap from="mocap_ned" to="pose_stamped"/>
        <remap from="mocap_velocity/body_level_frame" to="velocity/body_level_frame"/>
        <remap from="rgbd_velocity_body_frame" to="rgbd_velocity/body_level_frame"/>
    </node>

    <group if="$(arg use_rgbd)">

        <node name="odom_to_velocity" pkg="odom_to_velocity" type="odom_to_velocity_node" output="screen">
            <rosparam command="load" file="$(find odom_to_velocity)/params/basic.yaml" />
        </node>

        <group if="$(arg run_uncc)">
            <include if="$(arg use_xtion)" file="$(find uncc_rgbd_odom)/launch/rgbd_odometry.launch)"/>
            <include unless="$(arg use_xtion)" file="$(find uncc_rgbd_odom)/launch/astra_rgbd.launch)"/>
        </group>

    </group>


    <node name="pose_to_vel" pkg="position_to_velocity" type="position_to_velocity_node" output="screen" >
        <rosparam command="load" file="$(find position_to_velocity)/params/basic.yaml" />
    </node>

</launch>