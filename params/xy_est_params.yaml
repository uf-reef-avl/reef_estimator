{
#State: xdot,  ydot,  roll_bias,  pitch_bias,  accX_bias,  accY_bias.

xy_P0: [
  0.01, 0,     0,    0,    0,    0,
  0,     0.01, 0,    0,    0,    0,
  0,     0,     0.01, 0,    0,    0,
  0,     0,     0,    0.01, 0,    0,
  0,     0,     0,    0,    0.01, 0,
  0,     0,     0,    0,    0,    0.01
],
#xy_Q: [
#  0.0001, 0,    0,    0,    0,    0,
#  0,    0.0001, 0,    0,    0,    0,
#  0,    0,    0.000, 0,    0,    0,
#  0,    0,    0,    0.000, 0,    0,
#  0,    0,    0,    0,    0.000, 0,
#  0,    0,    0,    0,    0,    0.000
#],

xy_Q: [
  0.4, 0,    0,    0,    0,    0,
  0,    0.4, 0,    0,    0,    0,
  0,    0,    0.01, 0,    0,    0,
  0,    0,    0,    0.01, 0,    0,
  0,    0,    0,    0,    0.01, 0,
  0,    0,    0,    0,    0,    0.01
],
#It works OK.
#xy_Q: [
#  0.01, 0,    0,    0,    0,    0,
#  0,    0.01, 0,    0,    0,    0,
#  0,    0,    0.025, 0,    0,    0,
#  0,    0,    0,    0.025, 0,    0,
#  0,    0,    0,    0,    0.009, 0,
#  0,    0,    0,    0,    0,    0.009
#],

#xy_Q: [
#  0.01, 0,    0,    0,    0,    0,
#  0,    0.01, 0,    0,    0,    0,
#  0,    0,    0.01, 0,    0,    0,
#  0,    0,    0,    0.01, 0,    0,
#  0,    0,    0,    0,    0.01, 0,
#  0,    0,    0,    0,    0,    0.01
#],

#When using RGBD R is set dynamically.
#When using MOCAP this is the value that R takes.
xy_R0: [
  0.01, 0,
  0,    0.01
],
#Partial Update
#xdot,  ydot,  roll_bias,  pitch_bias,  accX_bias,  accY_bias.
xy_x0: [0, 0, 0, 0, 0, 0],
#xy_beta: [1, 1, 0.01, 0.01, 0.01, 0.01]
#xy_beta: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
xy_beta: [1.0,1.0, 0.01, 0.01, 0.01, 0.01] #BEst plot until now
#xy_beta: [1.0,1.0, 0.01, 0.01, 0.025, 0.025] #Very good, but as a second choice
}